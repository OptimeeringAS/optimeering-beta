{
    "components": {
        "schemas": {
            "EnumParameters": {
                "enum": [
                    "area",
                    "market",
                    "statistic",
                    "unit_type"
                ],
                "title": "EnumParameters",
                "type": "string"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "title": "Detail",
                        "type": "array"
                    }
                },
                "title": "HTTPValidationError",
                "type": "object"
            },
            "PredictionDictResponse": {
                "additionalProperties": false,
                "properties": {
                    "prediction_for": {
                        "description": "The time prediction is made for.'",
                        "format": "date-time",
                        "title": "Prediction For",
                        "type": "string"
                    },
                    "values": {
                        "additionalProperties": {
                            "type": "number"
                        },
                        "title": "Values",
                        "type": "object"
                    }
                },
                "required": [
                    "prediction_for",
                    "values"
                ],
                "title": "PredictionDictResponse",
                "type": "object"
            },
            "PredictionFloatModel": {
                "additionalProperties": false,
                "properties": {
                    "prediction_for": {
                        "description": "The time prediction is made for.'",
                        "format": "date-time",
                        "title": "Prediction For",
                        "type": "string"
                    },
                    "value": {
                        "example": 0.3,
                        "title": "Value",
                        "type": "number"
                    }
                },
                "required": [
                    "prediction_for",
                    "value"
                ],
                "title": "PredictionFloatModel",
                "type": "object"
            },
            "PredsCreatedSeries": {
                "additionalProperties": false,
                "properties": {
                    "area": {
                        "description": "Areas to be filtered. E.g. NO1, NO2",
                        "title": "Area",
                        "type": "string"
                    },
                    "created_at": {
                        "examples": [
                            "2024-03-15T06:00:00+00:00"
                        ],
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "id": {
                        "title": "Id",
                        "type": "integer"
                    },
                    "latest_event_time": {
                        "anyOf": [
                            {
                                "format": "date-time",
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "examples": [
                            "2024-03-15T06:00:00+00:00"
                        ],
                        "title": "Latest Event Time"
                    },
                    "market": {
                        "description": "Market type for the series",
                        "title": "EnumMarket",
                        "type": "string"
                    },
                    "name": {
                        "description": "Unique name for the series",
                        "title": "Name",
                        "type": "string"
                    },
                    "statistic": {
                        "description": "Type of statistics.",
                        "title": "EnumStatistic",
                        "type": "string"
                    },
                    "unit_type": {
                        "description": "Unit type for the series",
                        "title": "EnumUnitType",
                        "type": "string"
                    }
                },
                "required": [
                    "unit_type",
                    "market",
                    "area",
                    "name",
                    "statistic",
                    "id",
                    "created_at"
                ],
                "title": "PredsCreatedSeries",
                "type": "object"
            },
            "PredsDataGetResponse": {
                "additionalProperties": false,
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/PredsSingleSeriesDataCreated"
                        },
                        "title": "Items",
                        "type": "array"
                    },
                    "next_page": {
                        "description": "The next page of results (if available).",
                        "title": "Next Page",
                        "type": "string"
                    }
                },
                "required": [
                    "items"
                ],
                "title": "PredsDataGetResponse",
                "type": "object",
                "x-optimeering-iterable": {
                    "description": "This extension denotes that the response is iterable.",
                    "value": true
                }
            },
            "PredsSeriesGetResponse": {
                "additionalProperties": false,
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/PredsCreatedSeries"
                        },
                        "title": "Items",
                        "type": "array"
                    },
                    "next_page": {
                        "description": "The next page of results (if available).",
                        "title": "Next Page",
                        "type": "string"
                    }
                },
                "required": [
                    "items"
                ],
                "title": "PredsSeriesGetResponse",
                "type": "object",
                "x-optimeering-datapoint-info": {
                    "api-name": "PredictionsApi",
                    "description": "This extension links responses of series API routes to the API routes that return their datapoints.",
                    "operation-id": "get_predictions",
                    "response-model-name": "PredsDataGetResponse"
                },
                "x-optimeering-iterable": {
                    "description": "This extension denotes that the response is iterable.",
                    "value": true
                },
                "x-optimeering-model-with-series-ids": {
                    "description": "This extension denotes that the response have series ids.",
                    "value": true
                }
            },
            "PredsSingleEventDataCreated": {
                "additionalProperties": false,
                "properties": {
                    "created_at": {
                        "description": "The timestamp at which datapoint was registered",
                        "examples": [
                            "2024-01-02T03:04:05+00:00"
                        ],
                        "format": "date-time",
                        "title": "Created At",
                        "type": "string"
                    },
                    "event_time": {
                        "description": "Timestamp for when datapoint was generated.",
                        "examples": [
                            "2024-01-02T03:04:05+00:00"
                        ],
                        "format": "date-time",
                        "title": "Event Time",
                        "type": "string"
                    },
                    "id": {
                        "description": "Unique Identifier for the resource type.",
                        "title": "Id",
                        "type": "integer"
                    },
                    "predictions": {
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/PredictionDictResponse"
                                },
                                {
                                    "$ref": "#/components/schemas/PredictionFloatModel"
                                }
                            ]
                        },
                        "title": "Predictions",
                        "type": "array"
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "event_time",
                    "predictions"
                ],
                "title": "PredsSingleEventDataCreated",
                "type": "object"
            },
            "PredsSingleSeriesDataCreated": {
                "additionalProperties": false,
                "properties": {
                    "events": {
                        "items": {
                            "$ref": "#/components/schemas/PredsSingleEventDataCreated"
                        },
                        "title": "Events",
                        "type": "array"
                    },
                    "series_id": {
                        "description": "Identifier for the series id.",
                        "title": "Series Id",
                        "type": "integer"
                    }
                },
                "required": [
                    "series_id",
                    "events"
                ],
                "title": "PredsSingleSeriesDataCreated",
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "title": "Location",
                        "type": "array"
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                },
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError",
                "type": "object"
            }
        }
    },
    "info": {
        "title": "Optimeering",
        "version": "0.1.0"
    },
    "openapi": "3.0.3",
    "paths": {
        "/api/parameters/{param}": {
            "get": {
                "operationId": "get_parameter_values",
                "parameters": [
                    {
                        "in": "path",
                        "name": "param",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/EnumParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Parameter List",
                "tags": [
                    "parameters"
                ]
            }
        },
        "/api/predictions/": {
            "get": {
                "description": "Returns predictions",
                "operationId": "get_predictions",
                "parameters": [
                    {
                        "description": "Series ID to filter. If not specified, will return all series.",
                        "in": "query",
                        "name": "series_id",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "minLength": 0,
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Series ID to filter. If not specified, will return all series.",
                            "title": "Series Id"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictInt]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "The first datetime to fetch (inclusive). Defaults to current time. Should be specified in ISO 8601 datetime or duration format (eg - '2024-05-15T06:00:00+00:00', 'P1H', '-P1W1D', etc.)",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "format": "duration",
                                    "type": "string"
                                },
                                {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "The first datetime to fetch (inclusive). Defaults to current time. Should be specified in ISO 8601 datetime or duration format (eg - '2024-05-15T06:00:00+00:00', 'P1H', '-P1W1D', etc.)",
                            "title": "Start"
                        }
                    },
                    {
                        "description": "The last datetime to fetch (exclusive). Defaults to 2099-12-30. Should be specified in ISO 8601 datetime or duration format (eg - '2024-05-15T06:00:00+00:00', 'P1H', '-P1W1D', etc.)",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "format": "duration",
                                    "type": "string"
                                },
                                {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "The last datetime to fetch (exclusive). Defaults to 2099-12-30. Should be specified in ISO 8601 datetime or duration format (eg - '2024-05-15T06:00:00+00:00', 'P1H', '-P1W1D', etc.)",
                            "title": "End"
                        }
                    },
                    {
                        "description": "Number of items per page",
                        "example": 2,
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "maximum": 100000,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 100000,
                            "description": "Number of items per page",
                            "title": "Limit"
                        },
                        "x-optimeering-pagination-parameter": {
                            "description": "This extension denotes that the parameter is used for pagination.",
                            "value": true
                        }
                    },
                    {
                        "description": "Page offset",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Page offset",
                            "title": "Offset"
                        },
                        "x-optimeering-pagination-parameter": {
                            "description": "This extension denotes that the parameter is used for pagination.",
                            "value": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredsDataGetResponse"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Predictions",
                "tags": [
                    "predictions"
                ],
                "x-optimeering-paginated-route": {
                    "description": "This extension denotes that the route returns a paginated response and is paginated by parameters `limit` and `offset`. These routes return a `next_page` in the response, which can be used to obtain the next page of the paginated response.Any language specific client build over the API should consider this extension as a flag to implement pagination logic.",
                    "value": true
                }
            }
        },
        "/api/predictions/series/": {
            "get": {
                "description": "Returns the prediction series",
                "operationId": "get_prediction_series",
                "parameters": [
                    {
                        "description": "Name of the series to retrieve. If not specified, will return all series.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "description": "Name of the series to retrieve. If not specified, will return all series.",
                            "title": "Name",
                            "type": "string"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictStr]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "The name of the area (eg - NO3, SE4, or FI). If not specified, will return all areas.",
                        "in": "query",
                        "name": "area",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "The name of the area (eg - NO3, SE4, or FI). If not specified, will return all areas.",
                            "title": "Area"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictStr]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "The market for which series should be retrieved. If not specified, will return series for all markets.",
                        "in": "query",
                        "name": "market",
                        "required": false,
                        "schema": {
                            "description": "The market for which series should be retrieved. If not specified, will return series for all markets.",
                            "title": "Market",
                            "type": "string"
                        },
                        "x-optimeering-allowed-parameter-values": {
                            "description": "This extension denotes that this parameter take in specific value/ combination of values.",
                            "parameter-name": "market"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictStr]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "Statistic type (eg. 'size', 'direction', or 'quantile'). If not specified, will return series for all statistic types.",
                        "in": "query",
                        "name": "statistic",
                        "required": false,
                        "schema": {
                            "description": "Statistic type (eg. 'size', 'direction', or 'quantile'). If not specified, will return series for all statistic types.",
                            "title": "Statistic",
                            "type": "string"
                        },
                        "x-optimeering-allowed-parameter-values": {
                            "description": "This extension denotes that this parameter take in specific value/ combination of values.",
                            "parameter-name": "statistic"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictStr]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "ID of the series to retrieve. If not specified, will return all series.",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "minLength": 0,
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "ID of the series to retrieve. If not specified, will return all series.",
                            "title": "Id"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictInt]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "Unit type (eq. 'volumes', 'price', or 'price_spread'). If not specified, will return series for all unit types.",
                        "in": "query",
                        "name": "unit_type",
                        "required": false,
                        "schema": {
                            "description": "Unit type (eq. 'volumes', 'price', or 'price_spread'). If not specified, will return series for all unit types.",
                            "title": "Unit Type",
                            "type": "string"
                        },
                        "x-optimeering-allowed-parameter-values": {
                            "description": "This extension denotes that this parameter take in specific value/ combination of values.",
                            "parameter-name": "unit_type"
                        },
                        "x-optimeering-comma-separated": {
                            "data-type": "List[StrictStr]",
                            "description": "This extension denotes that the API parameter takes in comma separated string but is actually an array defined by the field `data_type`."
                        }
                    },
                    {
                        "description": "Number of items per page",
                        "example": 2,
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "maximum": 100000,
                                    "minimum": 1,
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 100000,
                            "description": "Number of items per page",
                            "title": "Limit"
                        },
                        "x-optimeering-pagination-parameter": {
                            "description": "This extension denotes that the parameter is used for pagination.",
                            "value": true
                        }
                    },
                    {
                        "description": "Page offset",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Page offset",
                            "title": "Offset"
                        },
                        "x-optimeering-pagination-parameter": {
                            "description": "This extension denotes that the parameter is used for pagination.",
                            "value": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PredsSeriesGetResponse"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "summary": "Get Series",
                "tags": [
                    "predictions"
                ],
                "x-optimeering-paginated-route": {
                    "description": "This extension denotes that the route returns a paginated response and is paginated by parameters `limit` and `offset`. These routes return a `next_page` in the response, which can be used to obtain the next page of the paginated response.Any language specific client build over the API should consider this extension as a flag to implement pagination logic.",
                    "value": true
                }
            }
        }
    }
}